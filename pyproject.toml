[tool.poetry]
name = "vaccine"
version = "0.1.0"
description = "Demo application for what a vaccine eligibility flow could look like"
authors = ["Praekelt.org <dev@praekelt.org>"]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://github.com/praekeltfoundation/vaccine-eligibility"
repository = "https://github.com/praekeltfoundation/vaccine-eligibility"
packages = [
    { include = "vaccine" },
    { include = "mqr" },
    { include = "yal" },
]

[tool.poetry.dependencies]
python = "^3.9"
aio-pika = "^6.7.1"
sanic = "~21.12"
prometheus-client = "^0.9.0"
aiohttp = {extras = ["speedups"], version = "^3.10.2"}
sentry-sdk = "^2.8.0"
phonenumberslite = "^8.13.9"
pycountry = "^20.7.3"
aiohttp-client-cache = "^0.5.2"
rapidfuzz = ">=1.4.1,<1.6.0"  # 1.6.0 changes search result ordering
holidays = "^0.11.2"
email-validator = "^1.1.3"
zbar-py = "^1.0.4"
opencv-python-headless = "^4.8.1"
redis = "^4.3.3"
geopy = "2.2.0"
emoji = "^2.1.0"
types-emoji = "^2.0.1"
pytablereader = {extras = ["md"], version = "^0.31.3"}
setuptools = "^70.0.0"
requests = "^2.32.0"
websockets = "~10"

[tool.poetry.dev-dependencies]
ruff = "^0.6.9"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.14.0"
Faker = "^8.1.0"
locust = "^2.23.1"
sanic-testing = "^0.8.3"
mypy = "^0.960"
types-redis = "^4.2.6"
types-python-dateutil = "^2.8.17"
types-setuptools = "^65.6.0"

[tool.poetry.group.dev.dependencies]
types-requests = "^2.28.11.8"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
extend-exclude = [
    "*/migrations/*.py",
    "docs/conf.py",

]

[tool.ruff.lint]
select = [
    "E", "F", "W", # pycodestyle + pyflakes == flake8 - mccabe
    "I",           # isort
    "UP",          # pyupgrade
    "S",           # flake8-bandit
    "B",           # flake8-bugbear
    "C4",          # flake8-comprehensions
    # "DJ",          # flake8-django
    "PIE",         # flake8-pie
    # "PT",          # flake8-pytest-style
    "SIM",         # flake8-simplify
    "PTH",         # flake8-use-pathlib
    # "RUF",         # ruff-specific rules
]

ignore = [
    "E501",  # TODO: Something about these long lines.
    "S113",  # TODO: Add request timeouts.
    "PTH118", # TODO: Switch to pathlib
    "B005", # TODO: Using '.strip()' with multi-character strings is misleading
    "B904", # TODO: Within an 'except' clause, raise exceptions with 'raise ... from err' or 'raise ... from None'
    "S101", # TODO: Use of 'assert' detected
    "SIM102", # TODO: Use a single 'if' statement instead of nested 'if' statements
    "S311", # TODO: Standard pseudo-random generators are not suitable for cryptographic purposes
    "PTH123", # TODO: 'open()' should be replaced by 'Path.open()'
    "UP015", # TODO: Unnecessary open mode parameters
    "B006", # TODO: Do not use mutable data structures for argument defaults
    "S105", # TODO: Possible hardcoded password assigned to: "RAPIDPRO_TOKEN"
    "C401", # TODO: Unnecessary generator (rewrite as a 'set' comprehension)
    "SIM108", # TODO: Use ternary operator instead of 'if'-'else'-block
    "E721", # TODO: Use 'is' and 'is not' for type comparisons, or 'isinstance()' for isinstance checks
    "F601", # TODO: Dictionary key literal repeated
    "SIM118", # TODO: Use 'key in dict' instead of 'key in dict.keys()'
    "I001", # TODO: Import block is un-sorted or un-formatted
    "SIM117", # TODO: Use a single 'with' statement with multiple contexts instead of nested 'with' statements
    "C403", # TODO: Unnecessary 'list' comprehension (rewrite as a 'set' comprehension)
    "S106", # TODO: Possible hardcoded password assigned to argument
    "B019", # TODO: Use of 'functools.lru_cache' or 'functools.cache' on methods can lead to memory leaks
]

[tool.ruff.lint.per-file-ignores]
"**/tests/**" = [
    "S101",  # It's okay to use 'assert' in tests.
]

# TODO: Move this somewhere sensible?
"**/tests.py" = [
    "S101",  # It's okay to use 'assert' in tests.
]

"**/config/settings/{test,dev}.py" = [
    "S104",  # It's okay to bind to all interfaces in tests
    "F405", # Its okay to import * in settings
    "S105", # Its okay to have hardcoded secrets in test config
]

[tool.pytest.ini_options]
addopts = "--cov=vaccine --cov=yal --ignore=vaccine.testing"
filterwarnings = [
    "error::UserWarning:_pytest",  # For PytestUnhandledCoroutineWarning
    "error::DeprecationWarning",
    # Various things pass a deprecated loop arg, presumably for python 3.7
    "default::DeprecationWarning:asyncio",
    "default::DeprecationWarning:pytest_asyncio",
    "default::DeprecationWarning:sanic.server:556",
    "default::DeprecationWarning:sanic.server.runners:133",
]
